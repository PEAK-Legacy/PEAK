*(Note that the following document is a statement of intent, not a
cataloging of the current state of the !TransWarp implementation.  It
will likely be some time before everything described here exists.)*

The Vision

 !TransWarp is a general purpose Aspect-Oriented Programming,
 Generative Programming, and CASE toolkit for Python.  Its goals are
 to make developing applications as simple as 1-2-3:

  1. Draw UML diagrams in the XMI-compatible tool of your choice.

  2. Write domain-specific logic, as needed.

  3. Plug in off-the-shelf (but customizable) "horizontal frameworks"
  such as UI, data storage, testing code, security management, etc.



The Software

 Frameworks to be Included:

  * MOF-like and XMI-compatible metadata management

  * Tools for the "CORE+" object-relational mapping patterns

    - DDL generation for Sybase, !PostgreSQL, Firebird, Oracle, ...?
    (contributed drivers accepted)

  * Web-based and other UI environment libraries (e.g. wxPython GUI)

  * Aspect libraries for doing testing, debugging, logging,
  documentation generation, synchronization, etc.

  * "Feature Definition" libraries for operations such as wrapping or
  chaining methods, combining sequences, etc.

  * Other generally applicable "horizontal" frameworks (i.e. based on
  areas of concern, not on subject matter/application domain) as
  contributed

 Not to be Included:

  * Vertical frameworks, domain models, or service delivery platforms


Compatibility/Installation Requirements

 - Target platform: Python 1.5.2 with XML-SIG and Disutils libraries
 (retarget for 2.1 in near future)

 - No C extensions required for core AOP library, but
 !ExtensionClasses required for almost everything else.


Documentation

 * Architecture Documents

   - Online UML models for all included software

     - Static class diagrams

     - Interaction diagrams for any complex bits

     - Use cases, as needed

   - Functional/Acceptance tests for all subsystems

   - Engineering Standards documentation

 * End-User Documents

   - An AOP introduction/tutorial

   - "How to" guides for each major feature set

   - Module reference documents (autogen from docstrings)

Licensing

  BSD-style, minus any advertising or credit requirements.  No
  warranty.

Availability

  Initially through publication on Zope.org.  Later, add anonymous
  CVS, web-viewable CVS, FTP, etc. through !SourceForge or other.
