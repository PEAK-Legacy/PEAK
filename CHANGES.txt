Fixes and Enhancements since Version 0.5 alpha 3

 - The 'log()' method of PEAK loggers ('logs.ILogger') now accepts a level name
   *or* a number, for convenient invocation.

 - SQL transaction semantics have changed.  Now, issuing an SQL statement
   *always* causes the connection to join the active PEAK transaction, even if
   you request that the SQL be issued "outside" a transaction.  Such SQL will
   be issued outside of the *database* transaction, but not outside of the
   PEAK transaction.  This simplifies the overall processing model for dealing
   with "untransacted" SQL such as Sybase DDL or read-only Oracle transactions.
   (In particular, the requirement that triggered this change was to allow
   Oracle read-only transactions to be released at the end of the current PEAK
   transaction.)  Also, got rid of the now-meaningless 'begin' command in n2.

 - The 'events.IEventSource' interface now returns a 'canceller' function from
   the 'addCallback()' method, allowing you to cancel a previously-scheduled
   callback.  This fixes a memory leak and performance problem with
   'events.AnyOf()', which previously could accumulate unneeded callbacks on
   the sources it was monitoring.  Note that if you have developed any custom
   event sources with 'addCallback()' methods, you must make sure that they
   return a canceller from now on.

 - Added 'ref:factory@addr1||addr2' URL scheme that maps to a corresponding
   'naming.Reference("factory",["addr1","addr2"])'.  'factory' can be either a
   dotted import string referencing a 'naming.IObjectFactory', or you can
   define a factory in the 'peak.naming.factories' property space.

 - Added a 'zconfig.schema' factory, so that 'ref:zconfig.schema@streamURL'
   will load a schema loader.  Schema loaders are themselves object factories,
   so you can do something like:

     [Named Services]
     peak.naming.factories.myschema = \
         naming.LinkRef('ref:zconfig.schema@pkgfile:mypkg/Schema.xml')

   in order to make URLs like 'ref:myschema@filename' work.  Note, by the way,
   that the above could also read:

     [Named Services]
     peak.naming.factories.myschema = \
         naming.Reference('zconfig.schema',['pkgfile:mypkg/Schema.xml'])

   which runs somewhat faster at lookup time.  Similarly, one can also use
   'naming.Reference("myschema",["somefile"])' in place of a
   'naming.LinkRef("ref:myschema@filename")'.  As well as being faster, for
   some use cases it's easier to 'Reference' directly than to glue together
   a 'ref:' URL string.


