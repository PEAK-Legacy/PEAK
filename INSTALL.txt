Installing PEAK

 PEAK Release 0.5 alpha 1

 Copyright (C) 1996-2003 by Phillip J. Eby and Tyler C. Sarna.
 All rights reserved.  This software may be used under the same terms
 as Zope or Python.  THERE ARE ABSOLUTELY NO WARRANTIES OF ANY KIND.
 Code quality varies between modules, from "beta" to "experimental
 pre-alpha".  :)


 SYSTEM REQUIREMENTS

  Python 2.2.2 or better is required.  Some portions of PEAK may support only
  POSIX-like and/or Windows operating systems.

  Note: if you have installed previous versions of PEAK or TransWarp, be
  sure to remove them before installing this one.  A lot of things have
  moved, been removed, or just plain ain't the same.


 BASIC INSTALLATION

  PEAK is distributed using the now-standard Python 'distutils' protocol.
  Just unpack the archive, go to the directory containing 'setup.py', and run::

    python setup.py install

  PEAK will be installed in the 'site-packages' directory of your Python
  installation.  (Unless directed elsewhere; see the "Installing Python
  Modules" section of the Python manuals for details on customizing
  installation locations, etc.).

 SCRIPTS

  On operating systems where 'os.name == "posix"', PEAK installs a Python
  script named 'peak'.  'peak' is an application bootstrap script that
  can invoke any object that is referenceable via the PEAK naming system.
  Run the 'peak' script for usage info, or see the 'Bootstrap' class in
  'peak.running.commands' for more on how to make objects bootable via 'peak'.

 THIRD PARTY SOFTWARE INCLUDED WITH PEAK

  Aaron Watters' 'kjbuckets' Module

   PEAK now includes a copy of Aaron Watters' 'kjbuckets' module for
   your convenience, and automatically installs it alongside PEAK in
   your Python 'site-packages' directory.  (Note that this will overwrite
   any existing installation of the 'kjbuckets' module.)

   'kjbuckets' is copyright Aaron Watters and contributors; please see
   the 'src/kjbuckets/COPYRIGHT.txt' file for details of its license.

  The Zope 3 'Interface' and 'Persistence' Packages

   PEAK includes a copy of the following packages from the Zope X3 Milestone 2
   release, and will install them unless Zope X3 is available on 'sys.path'
   at the time 'setup.py' is run:

   - 'zope.interface'

   - 'persistence'

   - 'ZConfig'

   These packages are automatically installed alongside PEAK in your
   'site-packages' directory, unless you specify an alternate installation
   location to 'setup.py'.  Note that this will overwrite any existing
   installation of these packages.

   To prevent overwriting versions of these packages that were installed
   separately, 'setup.py' attempts to detect the presence of Zope X3 by
   importing 'zope.component' (which is not distributed with PEAK).  If you
   have a 'zope.component' package on your 'sys.path' when 'setup.py' runs,
   'setup.py' will assume you have a complete Zope X3 installation, and it
   will not install any of the Zope packages listed above, in order to avoid
   overwriting newer versions from your Zope installation.

   The 'zope.interface', 'persistence', and 'ZConfig' packages are
   Copyright Zope Corporation and contributors; please see the 'LICENSE.txt'
   files in their directories for details of their licenses.

 TESTING YOUR INSTALLATION

  PEAK comes with a moderately-sized built-in test suite.  If you wish to
  run it after installation, you can do so like this::

   python setup.py test

  This will run over 120 tests on various parts of PEAK.  If you have
  installed everything correctly, 100% of the tests should succeed.  If
  anything is broken, you will probably be unable to run the tests at all.

  If you'd like to run only a portion of the test suite, you can supply
  the '--test-module' or '-m' option to the test command as follows::

    python setup.py test --test-module=peak.util.tests

    python setup.py test -m peak.tests

  And so on.  You can also use 'python setup.py -q test' to make the tests
  run more "quietly".





















